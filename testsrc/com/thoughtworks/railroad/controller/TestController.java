package com.thoughtworks.railroad.controller;import static org.junit.Assert.*;import java.io.File;import com.thoughtworks.railroad.view.Parser;import org.junit.After;import org.junit.AfterClass;import org.junit.Before;import org.junit.BeforeClass;import org.junit.Test;public class TestController {  Controller controller;  @BeforeClass  public static void setUpBeforeClass() throws Exception {  }  @AfterClass  public static void tearDownAfterClass() throws Exception {  }  @Before  public void setUp() throws Exception {    Parser parser = new Parser(new File("graph.txt"));    controller = parser.getController();  }  @After  public void tearDown() throws Exception {  }  @Test  public final void testGetShortestPath() {    String actual = controller.getShortestPath("A-C");    assertEquals("Result should be 9", "9", actual);  }  @Test  public final void testGetDistance() {    String actual = controller.getDistance("A - E - B - C - D");    assertEquals("Result should be 22", "22", actual);  }  @Test  public final void testGetPathsWithExactStops() {    String actual = controller.getPathsWithExactStops("A-C", 4);    assertEquals("Result should be 3", "3", actual);  }  @Test  public final void testGetPathsWithMaxStops() {    String actual = controller.getPathsWithMaxStops("C-C", 3);    assertEquals("Result should be 2", "2", actual);  }  @Test  public final void testGetPathsWithMaxDistance() {    String actual = controller.getPathsWithMaxDistance("C-C", 30);    assertEquals("Result should be 7", "7", actual);  }  @Test  public final void testGetPaths() {    String actual = controller.getPaths("EXACT_STOPS , 4 , A-C ");    assertEquals("Result should be 3", "3", actual);  }}