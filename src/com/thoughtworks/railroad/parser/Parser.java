package com.thoughtworks.railroad.parser;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import com.thoughtworks.railroad.exception.WrongInputException;import com.thoughtworks.railroad.graph.GraphFactory;import com.thoughtworks.railroad.graph.IGraph;import com.thoughtworks.railroad.graph.Vertex;public class Parser {  public Parser(IGraph graph, String filename) throws IOException {    BufferedReader br = new BufferedReader(new FileReader(filename));    while(br.ready()) {      String line = br.readLine().toUpperCase();      String[] pairs = line.split(",");      for(String pair : pairs) {        parse(graph, pair);      }    }    br.close();  }  private void parse(IGraph graph, String pair) {    String input = pair.trim();    if(input.length() != 3) {      throw new WrongInputException(input);    }    String from = String.valueOf(input.charAt(0));    String to = String.valueOf(input.charAt(1));    int weight = Integer.parseInt(String.valueOf(input.charAt(2)));    Vertex vFrom = new Vertex(from);    Vertex vTo = new Vertex(to);        graph.addVertex(vFrom);    graph.addVertex(vTo);    graph.addEdge(vFrom, vTo, weight);      }   public static void main(String[] args) throws IOException {        String filename = args[0];    IGraph graph = GraphFactory.getEmptyGraph();    Parser parser = new Parser(graph, filename);  }}