package com.thoughtworks.railroad.operation;import com.thoughtworks.railroad.exception.NoSuchPathException;import com.thoughtworks.railroad.exception.WrongInputException;import com.thoughtworks.railroad.graph.GraphFactory;import com.thoughtworks.railroad.graph.IGraph;import com.thoughtworks.railroad.graph.Vertex;public class Router {  private static IGraph graph;  private Router() {    if (graph == null) {      graph = GraphFactory.getDirectedGraph();    }  }  public static Router getRouter() {    return new Router();  }    public IGraph getGraph() {    return graph;  }    public String getDistance(String inputPath) {    String nodes[] = inputPath.split("-");        if(nodes.length < 2) {      throw new WrongInputException("Distance: " + inputPath);    }        String from = nodes[0].trim().toUpperCase();    Vertex start = new Vertex(from);        Vertex[] stops = new Vertex[nodes.length - 1];    for(int i = 1; i < nodes.length; ++i) {      String stop = nodes[i].trim().toUpperCase();      stops[i - 1] = new Vertex(stop);    }    String distance = null;        try {      distance = graph.calculateDistance(start, stops);    } catch(NoSuchPathException e) {      return e.getMessage();    }        return distance;  }}