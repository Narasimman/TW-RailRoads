package com.thoughtworks.railroad.graph;import java.util.HashMap;import java.util.LinkedHashSet;import java.util.Map;import java.util.Set;import com.thoughtworks.railroad.exception.NoSuchVertexException;public class DirectedGraph implements IGraph {  private Map<Vertex, Set<Edge>> vertices;  public DirectedGraph() {    vertices = new HashMap<Vertex, Set<Edge>>();  }  @Override  public boolean addVertex(Vertex v) {    if(v == null) {      throw new NoSuchVertexException("null");    }    if (!vertices.containsKey(v)) {      vertices.put(v, new LinkedHashSet<Edge>());      return true;    }    return false;  }  @Override  public boolean addEdge(Vertex from, Vertex to, int weight) {    if(from == null || to == null) {      throw new NoSuchVertexException("null");    }    Edge newEdge = new Edge(from, to, weight);    Set<Edge> sourceEdges = vertices.get(from);    if (sourceEdges.contains(newEdge)) {      sourceEdges.remove(newEdge);    }    return vertices.get(from).add(newEdge);  }}